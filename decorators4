# This is a sample Python script.
from functools import cache, lru_cache, singledispatch


# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.

@cache
def fib1(n):
    """
    This function calculate the fibonacci function using the cache decorator.
    :param n:
    :return:
    """
    if n <= 1:
        return n
    return fib1(n - 1) + fib1(n - 2)


@lru_cache(maxsize=10)
def fib2(n):
    """
    This function calculate the fibonacci function using the lru_cache decorator with max size of 10 arguments in the
    memory.
    :param n.
    :return:
    """
    if n <= 1:
        return n
    return fib2(n - 1) + fib2(n - 2)


@singledispatch
def append_one(obj):
    """
    this is a generic function that append one to data set using singledispatch decorator.
    :param obj:
    :return:
    """
    pass


@append_one.register(list)
def add_list(obj):
    """
    This is a function that called by append one function to append one to list.
    :param obj:
    :return:
    """
    return obj + [1]


@append_one.register(set)
def add_list(obj):
    """
    This is a function that called by append one function to append one to set.
    :param obj:
    :return:
    """
    return obj.union({1})


@append_one.register(str)
def add_string(obj):
    """
    This is a function that called by append one function to append one to string.
    :param obj:
    :return:
    """
    return obj + str(1)


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    for i in range(1000):
        print(i, fib1(i))
    for i in range(1000):
        print(i, fib2(i))

    print(append_one("abcd"))
    print(append_one([1, 2, 3]))

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
